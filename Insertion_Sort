# Insertion sort python code
###### Info:#####
-> Its is a relatively slow sorting algorithm as it uses nested loops
-> It can efficiently sort for a list of size = 10,000
-> If complexity is high sorting becomes slow as lot of swaps are needed
#### Code ####
def ins_sort(A):
    for i in range(1,len(A)):
        for j in range(i-1,0,-1):
            j = i-1
            while((A[j]>A[j+1])and j>=0):
                A[j],A[j+1]= A[j+1],A[j]
                j-=1
##### Explanation #####
-> Here we start with the 2nd element(i=1)
-> Then we assign j to i-1 that is the 1st element
-> Compare A[j] and A[j+1] 
-> if A[j] is greater then we swap both of them
-> Then decrease value of j by 1 as we need to check till the 0th element 
